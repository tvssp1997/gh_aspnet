name: Deploy to Amazon ECS

on: 
  workflow_dispatch:
  push:
    branches: [ "main" ]

env:
  AWS_REGION: $${{secrets.AWS_REGION}}
  ECR_REPOSITORY: ${{secrets.ECR_REPO_URL}}/${{secrets.ECR_IMAGE_NAME}}
  ECR_IMAGE_NAME: ${{secrets.ECR_IMAGE_NAME}}

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: dev

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        cd ./ViewComponentsSample/
        docker build -t ${{secrets.ECR_IMAGE_NAME}} -f ./Dockerfile.yml . 
        docker push $ECR_IMAGE_NAME/$ECR_REPOSITORY:$IMAGE_TAG
        echo "image=$ECR_IMAGE_NAME/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

        # # docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        # docker tag ${{secrets.ECR_IMAGE_NAME}}:$IMAGE_TAG ${{secrets.ECR_REPO_URL}}/${{secrets.ECR_IMAGE_NAME}}:$IMAGE_TAG
        # docker push ${{secrets.ECR_REPO_URL}}/857139620000.dkr.ecr.us-west-1.amazonaws.com/${{secrets.ECR_IMAGE_NAME}}:$IMAGE_TAG
        # # echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT